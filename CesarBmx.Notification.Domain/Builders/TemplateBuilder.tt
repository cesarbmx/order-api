<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51" #>
<#@ assembly name="$(TargetDir)CesarBmx.Shared.Domain.dll" #>
<#@ assembly name="$(TargetDir)CesarBmx.Shared.Common.dll" #>
<#@ assembly name="$(TargetDir)Notification.Domain.dll" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="CesarBmx.Shared.Common.Helpers" #>
<#@ import namespace="CesarBmx.Shared.Domain.Models" #>
<#@ output extension=".txt" #>
<#@ import namespace="System.Linq" #>
<#
var types = FileHelper.GetTypes(typeof(IEntity),Assembly.LoadFrom(typeof(IEntity).Assembly.CodeBase.Replace("CesarBmx.Shared.Domain.dll","") +  "Notification.Domain.dll"));
foreach (var type in types) {
    
if(new[]
{
    //////// Exclude ////////
    "a"
    //, "b"
    //, "c"
    /////////////////////////
}.Any(c => type.Name.Contains(c))) continue;


////////////////////////////////////////////// Your code //////////////////////////////////////////////
#>



namespace CesarBmx.Notification.Domain.ModelBuilders
{
    public static class <#=type.Name#>Builder
    {    
        //public static string BuildProperty()
        //{
        //}
    }
}
<#
///////////////////////////////////////////////////////////////////////////////////////////////////////


SaveOutput(type.Name + "Builder.cs");
}
#>
<#+
private void SaveOutput(string outputFileName) {
var templateDirectory = Path.GetDirectoryName(Host.TemplateFile);
if (templateDirectory == null) return;
var outputFilePath = Path.Combine(templateDirectory, outputFileName);
if(!File.Exists(outputFilePath)) File.WriteAllText(outputFilePath, GenerationEnvironment.ToString()); 
GenerationEnvironment.Remove(0, GenerationEnvironment.Length);
}
#>
